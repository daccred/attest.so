// Prisma schema for Horizon project using MongoDB
// Save this as prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
  // Enable verbose logging for the client
  previewFeatures = ["interactiveTransactions", "jsonProtocol"] // Add any other preview features you use
  log             = ["query", "info", "warn", "error"]
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Metadata {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key   String @unique
  value Int
}

model ContractTransaction {
  id                        String     @id @default(auto()) @map("_id") @db.ObjectId
  txHash                    String     @unique // Transaction hash, primary business key
  status                    String
  ledger                    Int        // Ledger sequence where the transaction was included
  createdAt                 DateTime   // Timestamp when the transaction was processed/created by Soroban
  applicationOrder          Int
  feeBump                   Boolean
  envelopeXdr               String
  resultXdr                 String
  resultMetaXdr             String
  diagnosticEventsXdr       String[]
  latestLedgerRpc           Int        // Latest ledger from RPC at time of getTransaction call
  latestLedgerCloseTimeRpc  DateTime   // Latest ledger close time from RPC
  oldestLedgerRpc           Int        // Oldest ledger from RPC
  oldestLedgerCloseTimeRpc  DateTime   // Oldest ledger close time from RPC
  ingestedAt                DateTime   @default(now())
  events                    ContractEvent[] // Relation to multiple events
}

model ContractEvent {
  id                        String    @id @default(auto()) @map("_id") @db.ObjectId
  eventId                   String    @unique // Event ID from RPC
  type                      String
  ledger                    Int       // Ledger sequence where the event occurred
  ledgerClosedAt            DateTime
  contractId                String
  pagingToken               String
  inSuccessfulContractCall  Boolean
  topics                    String[]
  value                     String
  ingestedAt                DateTime  @default(now())

  // Relation to ContractTransaction
  transactionTxHash         String // Foreign key storing the txHash
  transaction               ContractTransaction @relation(fields: [transactionTxHash], references: [txHash])
}