function t(t,r){t.prototype=Object.create(r.prototype),t.prototype.constructor=t,e(t,r)}function e(t,r){return e=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},e(t,r)}var r=/*#__PURE__*/function(){function t(t){this.privateKey=void 0,this.privateKey=t.privateKey}var e=t.prototype;return e.generateUID=function(){return Promise.resolve("magic-schema-uid")},e.storeSchema=function(t){return Promise.resolve("magic-schema-uid")},e.verifySchema=function(t){return Promise.resolve(!0)},e.storeAttestation=function(t){return Promise.resolve("magic-attestation-uid")},e.verifyAttestationUID=function(t){return Promise.resolve(!0)},e.verifyAttestationIsRevocable=function(t){return Promise.resolve(!0)},e.updateAttestationStatus=function(t,e){return Promise.resolve(!0)},e.fetchSchema=function(t){return Promise.resolve(null)},e.performDelegation=function(t,e){return Promise.resolve(!0)},e.fetchAttestation=function(t){return Promise.resolve(null)},e.fetchAllAttestations=function(){return Promise.resolve([])},e.verifyAttestationValidity=function(t){return Promise.resolve(!0)},e.fetchCurrentTimestamp=function(){try{return Promise.resolve(Date.now())}catch(t){return Promise.reject(t)}},e.fetchAttestationCount=function(){return Promise.resolve(0)},e.fetchAllSchemaUIDs=function(){return Promise.resolve([])},e.fetchAllSchemaRecords=function(){return Promise.resolve([])},t}(),n=/*#__PURE__*/function(e){function r(){return e.apply(this,arguments)||this}t(r,e);var n=r.prototype;return n.create=function(t){try{var e=this;return Promise.resolve(e.verifySchema(t)).then(function(t){return t?Promise.resolve(e.generateUID()).then(function(t){return Promise.resolve(e.storeAttestation(t)).then(function(){return{data:t}})}):{error:"Invalid schema"}})}catch(t){return Promise.reject(t)}},n.revoke=function(t){try{var e=this;return Promise.resolve(e.verifyAttestationUID(t)).then(function(r){return r?Promise.resolve(e.verifyAttestationIsRevocable(t)).then(function(r){return r?Promise.resolve(e.updateAttestationStatus(t,"revoked")).then(function(){return{data:t}}):{error:"Attestation is not revocable"}}):{error:"Invalid attestation"}})}catch(t){return Promise.reject(t)}},n.getSchema=function(t){try{return Promise.resolve(this.fetchSchema(t)).then(function(t){return t?{data:t}:{error:"Schema not found"}})}catch(t){return Promise.reject(t)}},n.delegateAttestation=function(t,e){try{var r=this;return Promise.resolve(r.verifyAttestationUID(t)).then(function(n){return n?Promise.resolve(r.performDelegation(t,e)).then(function(t){return{data:t}}):{error:"Invalid attestation"}})}catch(t){return Promise.reject(t)}},n.getAttestation=function(t){try{return Promise.resolve(this.fetchAttestation(t)).then(function(t){return t?{data:t}:{error:"Attestation not found"}})}catch(t){return Promise.reject(t)}},n.getAllAttestations=function(){try{return Promise.resolve(this.fetchAllAttestations()).then(function(t){return{data:t}})}catch(t){return Promise.reject(t)}},n.isAttestationValid=function(t){try{return Promise.resolve(this.verifyAttestationValidity(t)).then(function(t){return{data:t}})}catch(t){return Promise.reject(t)}},n.getTimestamp=function(){try{return Promise.resolve(this.fetchCurrentTimestamp()).then(function(t){return{data:t}})}catch(t){return Promise.reject(t)}},n.getNumberOfAttestations=function(){try{return Promise.resolve(this.fetchAttestationCount()).then(function(t){return{data:t}})}catch(t){return Promise.reject(t)}},r}(r),o=/*#__PURE__*/function(e){function r(){return e.apply(this,arguments)||this}t(r,e);var n=r.prototype;return n.register=function(t){try{var e=this;return Promise.resolve(e.generateUID()).then(function(t){return Promise.resolve(e.storeSchema(t)).then(function(){return{data:t}})})}catch(t){return Promise.reject(t)}},n.retrieve=function(t){try{var e=this;return Promise.resolve(e.generateUID()).then(function(t){return Promise.resolve(e.storeSchema(t)).then(function(){return{data:t}})})}catch(t){return Promise.reject(t)}},n.getAllUIDs=function(){try{return Promise.resolve(this.fetchAllSchemaUIDs()).then(function(t){return{data:t}})}catch(t){return Promise.reject(t)}},n.getAllSchemaRecords=function(){try{return Promise.resolve(this.fetchAllSchemaRecords()).then(function(t){return{data:t}})}catch(t){return Promise.reject(t)}},r}(r),i=function(t){this.config=void 0,this.attestation=void 0,this.schema=void 0,this.config=t,this.attestation=new n(this.config),this.schema=new o(this.config)};export{i as default};
